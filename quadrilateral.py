import math
from wand.image import Image
from wand.drawing import Drawing
from wand.color import Color
from wand.display import display


def draw_quadrilateral(x1, x2, x3, x4, y1, y2, y3, y4):
    """
    Created a draw_quadrilateral()function for design a quadrilateral
    for coordinates generated by quadrilateral()

    with Drawing() as draw : fetching the attribute and function from wand package
    """
    with Drawing() as draw:

        draw.stroke_color = Color("black")
        draw.stroke_width = 1
        draw.fill_color = Color("white")
        draw.font_size = 12
        draw.text((x1 + 10), (y1 + 10), 'A')
        draw.text((x2 + 10), (y2 + 10), 'B')
        draw.text((x3 + 10), (y3 + 10), 'C')
        draw.text((x4 + 10), (y4 + 10), 'D')
        draw.stroke_width = 2
        # draw line AB
        draw.line((x1, y1), (x2, y2))
        # draw line BC
        draw.line((x2, y2), (x3, y3))
        # draw line CD
        draw.line((x3, y3), (x4, y4))
        # draw line AD
        draw.line((x1, y1), (x4, y4))

        """
            drawing the image of quadrilateral with the help of
            with Image() function as img: 
        """
        with Image(width=600, height=600, background=Color('white')) as img:
            draw(img)
            img.flip()
            display(img)


def quadrilateral(angle_a, angle_b, angle_c):
    """
    :param angle_a:
    :param angle_b:
    :param angle_c:
    :return:
    """
    # Lets Assume the coordinate of a line AB is (x1, y1) and (x2, y2)
    # Coordinates of Point A(x1, y2) and Point B(x2, y2)
    x1, y1 = 150, 150
    x2, y2 = 450, 150

    # Slope of line BC = tan(theta)
    m1 = math.tan(math.radians(180 - angle_b))
    
    # equation of line BC
    c1 = y2 - m1 * x2
    
    """ 
    assuming a point y3 on line BC 
    Coordinate of Point C
    """
    y3 = 300        # for given angle
    x3 = abs(int((y3 - c1) / m1))

    # finding the equation of line CD
    m2 = math.tan(math.radians(180 - angle_c - angle_b))
    # print("m2 = {}".format(m2))
    c2 = y3 - (m2 * x3)
    # print("C2 = {}".format(c2))

    #  Equation of line AD
    m3 = math.tan(math.radians(angle_a))
    # print("M3 = {}".format(m3))
    
    c3 = y1 - (m3 * x1)
    # print("C3 = {}".format(c3))

    # x4 = y4 = 0
    # coordinates of line AD
    x4 = abs(int((c2 - c3) / (m3 - m2)))
    y4 = abs(int((m3 * x4) + c3))

    print("Coordinate of point A ({}, {})".format(x1, y1))
    print("Coordinate of point B ({}, {})".format(x2, y2))
    print("Coordinate of point C ({}, {})".format(x3, y3))
    print("Coordinate of point D ({}, {})".format(x4, y4))

    draw_quadrilateral(x1, x2, x3, x4, y1, y2, y3, y4)
    # quadrilateral function ending


# Expecting the angle from the user
DAB, BCD, ADC = [int(angle.strip(' ')) for angle in input("Enter angle BAD, BCD, ADC of a quadrilateral ABCD:").split()]

if 360 > (DAB + ADC + BCD):
    ABC = 360 - (DAB + ADC + BCD)
    quadrilateral(DAB, ABC, BCD)
else:
    print("Sum of three angles must be less than 360")


